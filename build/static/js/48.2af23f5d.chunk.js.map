{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","sections/@dashboard/user/account/AccountBillingAddressBook.js","sections/@dashboard/user/account/AccountBillingPaymentMethod.js","sections/@dashboard/user/account/AccountBillingInvoiceHistory.js","sections/@dashboard/user/account/AccountBilling.js","sections/@dashboard/user/account/AccountChangePassword.js","sections/@dashboard/user/account/AccountGeneral.js","sections/@dashboard/user/account/AccountNotifications.js","sections/@dashboard/user/account/AccountSocialLinks.js","pages/dashboard/UserAccount.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","AccountBillingAddressBook","addressBook","Card","p","Stack","spacing","address","Paper","street","city","state","country","zipCode","phone","Button","size","startIcon","Iconify","onClick","id","AccountBillingPaymentMethod","cards","isOpen","onOpen","onCancel","direction","xs","md","card","position","border","theme","palette","grey","Image","alt","src","cardType","cardNumber","IconButton","top","right","Collapse","in","padding","marginTop","sm","TextField","fullWidth","label","placeholder","justifyContent","LoadingButton","type","AccountBillingInvoiceHistory","invoices","invoice","minWidth","fDate","createdAt","fCurrency","price","endIcon","AccountBilling","useState","open","setOpen","Grid","container","item","AccountChangePassword","enqueueSnackbar","useSnackbar","ChangePassWordSchema","Yup","shape","oldPassword","required","newPassword","min","confirmNewPassword","oneOf","methods","useForm","resolver","yupResolver","defaultValues","reset","handleSubmit","isSubmitting","formState","onSubmit","a","Promise","resolve","setTimeout","console","error","loading","AccountGeneral","user","useAuth","UpdateUserSchema","displayName","email","photoURL","phoneNumber","about","isPublic","setValue","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","py","px","textAlign","accept","maxSize","onDrop","helperText","mx","fData","labelPlacement","rowGap","columnGap","gridTemplateColumns","value","countries","option","code","multiline","rows","ACTIVITY_OPTIONS","APPLICATION_OPTIONS","NOTIFICATION_SETTINGS","AccountNotifications","activityComments","activityAnswers","activityFollows","applicationNews","applicationProduct","applicationBlog","activity","m","application","SOCIAL_LINKS","AccountSocialLinks","myProfile","facebookLink","instagramLink","linkedinLink","twitterLink","InputProps","startAdornment","InputAdornment","UserAccount","themeStretch","useSettings","currentTab","setCurrentTab","ACCOUNT_TABS","_userPayment","_userAddressBook","_userInvoices","_userAbout","Page","title","Container","PATH_DASHBOARD","root","Tabs","scrollButtons","allowScrollButtonsMobile","onChange","e","tab","Tab","disableRipple","capitalCase"],"mappings":"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","file":"static/js/48.2af23f5d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbs.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  links: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.any,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import isString from 'lodash/isString';\r\nimport PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {isString(moreLink) ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Card, Button, Typography, Stack, Paper } from '@mui/material';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAccountBillingAddressBook.propTypes = {\r\n  addressBook: PropTypes.array,\r\n};\r\n\r\nexport default function AccountBillingAddressBook({ addressBook }) {\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <Stack spacing={3} alignItems=\"flex-start\">\r\n        <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\r\n          Billing Info\r\n        </Typography>\r\n\r\n        {addressBook.map((address) => (\r\n          <Paper\r\n            key={address.id}\r\n            sx={{\r\n              p: 3,\r\n              width: 1,\r\n              bgcolor: 'background.neutral',\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              {address.name}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary' }}>\r\n                Address: &nbsp;\r\n              </Typography>\r\n              {`${address.street}, ${address.city}, ${address.state}, ${address.country} ${address.zipCode}`}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary' }}>\r\n                Phone: &nbsp;\r\n              </Typography>\r\n              {address.phone}\r\n            </Typography>\r\n\r\n            <Box sx={{ mt: 1 }}>\r\n              <Button\r\n                color=\"error\"\r\n                size=\"small\"\r\n                startIcon={<Iconify icon={'eva:trash-2-outline'} />}\r\n                onClick={() => {}}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button size=\"small\" startIcon={<Iconify icon={'eva:edit-fill'} />} onClick={() => {}}>\r\n                Edit\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        ))}\r\n\r\n        <Button size=\"small\" startIcon={<Iconify icon={'eva:plus-fill'} />}>\r\n          Add new address\r\n        </Button>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Card, Stack, Paper, Button, Collapse, TextField, Typography, IconButton } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\nimport Image from '../../../../components/Image';\r\nimport Iconify from '../../../../components/Iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAccountBillingPaymentMethod.propTypes = {\r\n  cards: PropTypes.array,\r\n  isOpen: PropTypes.bool,\r\n  onOpen: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n};\r\n\r\nexport default function AccountBillingPaymentMethod({ cards, isOpen, onOpen, onCancel }) {\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <Typography variant=\"overline\" sx={{ mb: 3, display: 'block', color: 'text.secondary' }}>\r\n        Payment Method\r\n      </Typography>\r\n\r\n      <Stack spacing={2} direction={{ xs: 'column', md: 'row' }}>\r\n        {cards.map((card) => (\r\n          <Paper\r\n            key={card.id}\r\n            sx={{\r\n              p: 3,\r\n              width: 1,\r\n              position: 'relative',\r\n              border: (theme) => `solid 1px ${theme.palette.grey[500_32]}`,\r\n            }}\r\n          >\r\n            <Image\r\n              alt=\"icon\"\r\n              src={\r\n                card.cardType === 'master_card'\r\n                  ? 'https://minimal-assets-api.vercel.app/assets/icons/ic_mastercard.svg'\r\n                  : 'https://minimal-assets-api.vercel.app/assets/icons/ic_visa.svg'\r\n              }\r\n              sx={{ mb: 1, maxWidth: 36 }}\r\n            />\r\n            <Typography variant=\"subtitle2\">{card.cardNumber}</Typography>\r\n            <IconButton\r\n              sx={{\r\n                top: 8,\r\n                right: 8,\r\n                position: 'absolute',\r\n              }}\r\n            >\r\n              <Iconify icon={'eva:more-vertical-fill'} width={20} height={20} />\r\n            </IconButton>\r\n          </Paper>\r\n        ))}\r\n      </Stack>\r\n\r\n      <Box sx={{ mt: 3 }}>\r\n        <Button size=\"small\" startIcon={<Iconify icon={'eva:plus-fill'} />} onClick={onOpen}>\r\n          Add new card\r\n        </Button>\r\n      </Box>\r\n\r\n      <Collapse in={isOpen}>\r\n        <Box\r\n          sx={{\r\n            padding: 3,\r\n            marginTop: 3,\r\n            borderRadius: 1,\r\n            bgcolor: 'background.neutral',\r\n          }}\r\n        >\r\n          <Stack spacing={3}>\r\n            <Typography variant=\"subtitle1\">Add new card</Typography>\r\n\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n              <TextField fullWidth label=\"Name on card\" />\r\n\r\n              <TextField fullWidth label=\"Card number\" />\r\n            </Stack>\r\n\r\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n              <TextField fullWidth label=\"Expiration date\" placeholder=\"MM/YY\" />\r\n\r\n              <TextField fullWidth label=\"Cvv\" />\r\n            </Stack>\r\n\r\n            <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1.5}>\r\n              <Button color=\"inherit\" variant=\"outlined\" onClick={onCancel}>\r\n                Cancel\r\n              </Button>\r\n              <LoadingButton type=\"submit\" variant=\"contained\" onClick={onCancel}>\r\n                Save Change\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Stack>\r\n        </Box>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Stack, Link, Button, Typography } from '@mui/material';\r\n// utils\r\nimport { fDate } from '../../../../utils/formatTime';\r\nimport { fCurrency } from '../../../../utils/formatNumber';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAccountBillingInvoiceHistory.propTypes = {\r\n  invoices: PropTypes.array,\r\n};\r\n\r\nexport default function AccountBillingInvoiceHistory({ invoices }) {\r\n  return (\r\n    <Stack spacing={3} alignItems=\"flex-end\">\r\n      <Typography variant=\"subtitle1\" sx={{ width: 1 }}>\r\n        Invoice History\r\n      </Typography>\r\n\r\n      <Stack spacing={2} sx={{ width: 1 }}>\r\n        {invoices.map((invoice) => (\r\n          <Stack key={invoice.id} direction=\"row\" justifyContent=\"space-between\" sx={{ width: 1 }}>\r\n            <Typography variant=\"body2\" sx={{ minWidth: 160 }}>\r\n              {fDate(invoice.createdAt)}\r\n            </Typography>\r\n            <Typography variant=\"body2\">{fCurrency(invoice.price)}</Typography>\r\n            <Link component={RouterLink} to=\"#\">\r\n              PDF\r\n            </Link>\r\n          </Stack>\r\n        ))}\r\n      </Stack>\r\n\r\n      <Button size=\"small\" endIcon={<Iconify icon={'eva:arrow-ios-forward-fill'} />}>\r\n        All invoices\r\n      </Button>\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n// @mui\r\nimport { Box, Grid, Card, Button, Typography, Stack } from '@mui/material';\r\n//\r\nimport AccountBillingAddressBook from './AccountBillingAddressBook';\r\nimport AccountBillingPaymentMethod from './AccountBillingPaymentMethod';\r\nimport AccountBillingInvoiceHistory from './AccountBillingInvoiceHistory';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAccountBilling.propTypes = {\r\n  addressBook: PropTypes.array,\r\n  cards: PropTypes.array,\r\n  invoices: PropTypes.array,\r\n};\r\n\r\nexport default function AccountBilling({ cards, addressBook, invoices }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Grid container spacing={5}>\r\n      <Grid item xs={12} md={8}>\r\n        <Stack spacing={3}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Typography variant=\"overline\" sx={{ mb: 3, display: 'block', color: 'text.secondary' }}>\r\n              Your Plan\r\n            </Typography>\r\n            <Typography variant=\"h4\">Premium</Typography>\r\n            <Box\r\n              sx={{\r\n                mt: { xs: 2, sm: 0 },\r\n                position: { sm: 'absolute' },\r\n                top: { sm: 24 },\r\n                right: { sm: 24 },\r\n              }}\r\n            >\r\n              <Button size=\"small\" color=\"inherit\" variant=\"outlined\" sx={{ mr: 1 }}>\r\n                Cancel plan\r\n              </Button>\r\n              <Button size=\"small\" variant=\"outlined\">\r\n                Upgrade plan\r\n              </Button>\r\n            </Box>\r\n          </Card>\r\n\r\n          <AccountBillingPaymentMethod\r\n            cards={cards}\r\n            isOpen={open}\r\n            onOpen={() => setOpen(!open)}\r\n            onCancel={() => setOpen(false)}\r\n          />\r\n\r\n          <AccountBillingAddressBook addressBook={addressBook} />\r\n        </Stack>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={4}>\r\n        <AccountBillingInvoiceHistory invoices={invoices} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\n// form\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { Stack, Card } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\nimport { FormProvider, RHFTextField } from '../../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountChangePassword() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const ChangePassWordSchema = Yup.object().shape({\r\n    oldPassword: Yup.string().required('Old Password is required'),\r\n    newPassword: Yup.string().min(6, 'Password must be at least 6 characters').required('New Password is required'),\r\n    confirmNewPassword: Yup.string().oneOf([Yup.ref('newPassword'), null], 'Passwords must match'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    oldPassword: '',\r\n    newPassword: '',\r\n    confirmNewPassword: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(ChangePassWordSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      enqueueSnackbar('Update success!');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3} alignItems=\"flex-end\">\r\n          <RHFTextField name=\"oldPassword\" type=\"password\" label=\"Old Password\" />\r\n\r\n          <RHFTextField name=\"newPassword\" type=\"password\" label=\"New Password\" />\r\n\r\n          <RHFTextField name=\"confirmNewPassword\" type=\"password\" label=\"Confirm New Password\" />\r\n\r\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n            Save Changes\r\n          </LoadingButton>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Card>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useCallback } from 'react';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { Box, Grid, Card, Stack, Typography } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// hooks\r\nimport useAuth from '../../../../hooks/useAuth';\r\n// utils\r\nimport { fData } from '../../../../utils/formatNumber';\r\n// _mock\r\nimport { countries } from '../../../../_mock';\r\n// components\r\nimport { FormProvider, RHFSwitch, RHFSelect, RHFTextField, RHFUploadAvatar } from '../../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountGeneral() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { user } = useAuth();\r\n\r\n  const UpdateUserSchema = Yup.object().shape({\r\n    displayName: Yup.string().required('Name is required'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    displayName: user?.displayName || '',\r\n    email: user?.email || '',\r\n    photoURL: user?.photoURL || '',\r\n    phoneNumber: user?.phoneNumber || '',\r\n    country: user?.country || '',\r\n    address: user?.address || '',\r\n    state: user?.state || '',\r\n    city: user?.city || '',\r\n    zipCode: user?.zipCode || '',\r\n    about: user?.about || '',\r\n    isPublic: user?.isPublic || '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(UpdateUserSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      enqueueSnackbar('Update success!');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n\r\n      if (file) {\r\n        setValue(\r\n          'photoURL',\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ py: 10, px: 3, textAlign: 'center' }}>\r\n            <RHFUploadAvatar\r\n              name=\"photoURL\"\r\n              accept=\"image/*\"\r\n              maxSize={3145728}\r\n              onDrop={handleDrop}\r\n              helperText={\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  sx={{\r\n                    mt: 2,\r\n                    mx: 'auto',\r\n                    display: 'block',\r\n                    textAlign: 'center',\r\n                    color: 'text.secondary',\r\n                  }}\r\n                >\r\n                  Allowed *.jpeg, *.jpg, *.png, *.gif\r\n                  <br /> max size of {fData(3145728)}\r\n                </Typography>\r\n              }\r\n            />\r\n\r\n            <RHFSwitch name=\"isPublic\" labelPlacement=\"start\" label=\"Public Profile\" sx={{ mt: 5 }} />\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={8}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                rowGap: 3,\r\n                columnGap: 2,\r\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\r\n              }}\r\n            >\r\n              <RHFTextField name=\"displayName\" label=\"Name\" />\r\n              <RHFTextField name=\"email\" label=\"Email Address\" />\r\n\r\n              <RHFTextField name=\"phoneNumber\" label=\"Phone Number\" />\r\n              <RHFTextField name=\"address\" label=\"Address\" />\r\n\r\n              <RHFSelect name=\"country\" label=\"Country\" placeholder=\"Country\">\r\n                <option value=\"\" />\r\n                {countries.map((option) => (\r\n                  <option key={option.code} value={option.label}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </RHFSelect>\r\n\r\n              <RHFTextField name=\"state\" label=\"State/Region\" />\r\n\r\n              <RHFTextField name=\"city\" label=\"City\" />\r\n              <RHFTextField name=\"zipCode\" label=\"Zip/Code\" />\r\n            </Box>\r\n\r\n            <Stack spacing={3} alignItems=\"flex-end\" sx={{ mt: 3 }}>\r\n              <RHFTextField name=\"about\" multiline rows={4} label=\"About\" />\r\n\r\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                Save Changes\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { useSnackbar } from 'notistack';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { Card, Stack, Typography } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\nimport { FormProvider, RHFSwitch } from '../../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ACTIVITY_OPTIONS = [\r\n  {\r\n    value: 'activityComments',\r\n    label: 'Email me when someone comments onmy article',\r\n  },\r\n  {\r\n    value: 'activityAnswers',\r\n    label: 'Email me when someone answers on my form',\r\n  },\r\n  { value: 'activityFollows', label: 'Email me hen someone follows me' },\r\n];\r\n\r\nconst APPLICATION_OPTIONS = [\r\n  { value: 'applicationNews', label: 'News and announcements' },\r\n  { value: 'applicationProduct', label: 'Weekly product updates' },\r\n  { value: 'applicationBlog', label: 'Weekly blog digest' },\r\n];\r\n\r\nconst NOTIFICATION_SETTINGS = {\r\n  activityComments: true,\r\n  activityAnswers: true,\r\n  activityFollows: false,\r\n  applicationNews: true,\r\n  applicationProduct: false,\r\n  applicationBlog: false,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountNotifications() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const defaultValues = {\r\n    activityComments: NOTIFICATION_SETTINGS.activityComments,\r\n    activityAnswers: NOTIFICATION_SETTINGS.activityAnswers,\r\n    activityFollows: NOTIFICATION_SETTINGS.activityFollows,\r\n    applicationNews: NOTIFICATION_SETTINGS.applicationNews,\r\n    applicationProduct: NOTIFICATION_SETTINGS.applicationProduct,\r\n    applicationBlog: NOTIFICATION_SETTINGS.applicationBlog,\r\n  };\r\n\r\n  const methods = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      enqueueSnackbar('Update success!');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3} alignItems=\"flex-end\">\r\n          <Stack spacing={2} sx={{ width: 1 }}>\r\n            <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\r\n              Activity\r\n            </Typography>\r\n\r\n            <Stack spacing={1}>\r\n              {ACTIVITY_OPTIONS.map((activity) => (\r\n                <RHFSwitch key={activity.value} name={activity.value} label={activity.label} sx={{ m: 0 }} />\r\n              ))}\r\n            </Stack>\r\n          </Stack>\r\n\r\n          <Stack spacing={2} sx={{ width: 1 }}>\r\n            <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\r\n              Application\r\n            </Typography>\r\n            <Stack spacing={1}>\r\n              {APPLICATION_OPTIONS.map((application) => (\r\n                <RHFSwitch key={application.value} name={application.value} label={application.label} sx={{ m: 0 }} />\r\n              ))}\r\n            </Stack>\r\n          </Stack>\r\n\r\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n            Save Changes\r\n          </LoadingButton>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { Stack, Card, InputAdornment } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\nimport { FormProvider, RHFTextField } from '../../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SOCIAL_LINKS = [\r\n  {\r\n    value: 'facebookLink',\r\n    icon: <Iconify icon={'eva:facebook-fill'} width={24} height={24} />,\r\n  },\r\n  {\r\n    value: 'instagramLink',\r\n    icon: <Iconify icon={'ant-design:instagram-filled'} width={24} height={24} />,\r\n  },\r\n  {\r\n    value: 'linkedinLink',\r\n    icon: <Iconify icon={'eva:linkedin-fill'} width={24} height={24} />,\r\n  },\r\n  {\r\n    value: 'twitterLink',\r\n    icon: <Iconify icon={'eva:twitter-fill'} width={24} height={24} />,\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAccountSocialLinks.propTypes = {\r\n  myProfile: PropTypes.shape({\r\n    facebookLink: PropTypes.string,\r\n    instagramLink: PropTypes.string,\r\n    linkedinLink: PropTypes.string,\r\n    twitterLink: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default function AccountSocialLinks({ myProfile }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const defaultValues = {\r\n    facebookLink: myProfile.facebookLink,\r\n    instagramLink: myProfile.instagramLink,\r\n    linkedinLink: myProfile.linkedinLink,\r\n    twitterLink: myProfile.twitterLink,\r\n  };\r\n\r\n  const methods = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      enqueueSnackbar('Update success!');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3} alignItems=\"flex-end\">\r\n          {SOCIAL_LINKS.map((link) => (\r\n            <RHFTextField\r\n              key={link.value}\r\n              name={link.value}\r\n              InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\">{link.icon}</InputAdornment>,\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n            Save Changes\r\n          </LoadingButton>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Card>\r\n  );\r\n}\r\n","import { capitalCase } from 'change-case';\r\nimport { useState } from 'react';\r\n// @mui\r\nimport { Container, Tab, Box, Tabs } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// _mock_\r\nimport { _userPayment, _userAddressBook, _userInvoices, _userAbout } from '../../_mock';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Iconify from '../../components/Iconify';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\n// sections\r\nimport {\r\n  AccountGeneral,\r\n  AccountBilling,\r\n  AccountSocialLinks,\r\n  AccountNotifications,\r\n  AccountChangePassword,\r\n} from '../../sections/@dashboard/user/account';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserAccount() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const [currentTab, setCurrentTab] = useState('general');\r\n\r\n  const ACCOUNT_TABS = [\r\n    {\r\n      value: 'general',\r\n      icon: <Iconify icon={'ic:round-account-box'} width={20} height={20} />,\r\n      component: <AccountGeneral />,\r\n    },\r\n    {\r\n      value: 'billing',\r\n      icon: <Iconify icon={'ic:round-receipt'} width={20} height={20} />,\r\n      component: <AccountBilling cards={_userPayment} addressBook={_userAddressBook} invoices={_userInvoices} />,\r\n    },\r\n    {\r\n      value: 'notifications',\r\n      icon: <Iconify icon={'eva:bell-fill'} width={20} height={20} />,\r\n      component: <AccountNotifications />,\r\n    },\r\n    {\r\n      value: 'social_links',\r\n      icon: <Iconify icon={'eva:share-fill'} width={20} height={20} />,\r\n      component: <AccountSocialLinks myProfile={_userAbout} />,\r\n    },\r\n    {\r\n      value: 'change_password',\r\n      icon: <Iconify icon={'ic:round-vpn-key'} width={20} height={20} />,\r\n      component: <AccountChangePassword />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Page title=\"User: Account Settings\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Account\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'User', href: PATH_DASHBOARD.user.root },\r\n            { name: 'Account Settings' },\r\n          ]}\r\n        />\r\n\r\n        <Tabs\r\n          value={currentTab}\r\n          scrollButtons=\"auto\"\r\n          variant=\"scrollable\"\r\n          allowScrollButtonsMobile\r\n          onChange={(e, value) => setCurrentTab(value)}\r\n        >\r\n          {ACCOUNT_TABS.map((tab) => (\r\n            <Tab disableRipple key={tab.value} label={capitalCase(tab.value)} icon={tab.icon} value={tab.value} />\r\n          ))}\r\n        </Tabs>\r\n\r\n        <Box sx={{ mb: 5 }} />\r\n\r\n        {ACCOUNT_TABS.map((tab) => {\r\n          const isMatched = tab.value === currentTab;\r\n          return isMatched && <Box key={tab.value}>{tab.component}</Box>;\r\n        })}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}