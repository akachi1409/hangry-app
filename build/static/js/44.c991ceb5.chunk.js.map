{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","../../src/index.ts","sections/@dashboard/e-commerce/ProductNewForm.js","pages/dashboard/EcommerceProductCreate.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","paramCase","input","options","noCase","__assign","delimiter","dotCase","GENDER_OPTION","CATEGORY_OPTION","group","classify","TAGS_OPTION","LabelStyle","styled","theme","typography","subtitle2","palette","text","secondary","marginBottom","spacing","ProductNewForm","isEdit","currentProduct","navigate","useNavigate","enqueueSnackbar","useSnackbar","NewProductSchema","Yup","shape","required","description","images","min","price","moreThan","defaultValues","useMemo","code","sku","priceSale","tags","inStock","taxes","gender","category","methods","useForm","resolver","yupResolver","reset","watch","control","setValue","getValues","handleSubmit","isSubmitting","formState","values","useEffect","onSubmit","a","Promise","resolve","setTimeout","PATH_DASHBOARD","eCommerce","list","console","error","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","Grid","container","item","xs","md","Card","p","Stack","label","simple","showPreview","accept","maxSize","onDrop","onRemove","filteredItems","filter","_file","onRemoveAll","value","render","field","Autocomplete","multiple","freeSolo","onChange","event","newValue","option","renderTags","getTagProps","index","Chip","key","size","renderInput","params","TextField","placeholder","Number","InputLabelProps","shrink","InputProps","startAdornment","InputAdornment","position","type","LoadingButton","loading","EcommerceProductCreate","themeStretch","useSettings","dispatch","useDispatch","pathname","useLocation","useParams","products","useSelector","state","product","includes","find","getProducts","Page","title","Container","root"],"mappings":"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","file":"static/js/44.c991ceb5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbs.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  links: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.any,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import isString from 'lodash/isString';\r\nimport PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {isString(moreLink) ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function paramCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"-\",\n    ...options,\n  });\n}\n","import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useCallback, useEffect, useMemo } from 'react';\r\n// form\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Card, Chip, Grid, Stack, TextField, Typography, Autocomplete, InputAdornment } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// components\r\nimport {\r\n  FormProvider,\r\n  RHFSwitch,\r\n  RHFSelect,\r\n  RHFEditor,\r\n  RHFTextField,\r\n  RHFRadioGroup,\r\n  RHFUploadMultiFile,\r\n} from '../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst GENDER_OPTION = ['Men', 'Women', 'Kids'];\r\n\r\nconst CATEGORY_OPTION = [\r\n  { group: 'Clothing', classify: ['Shirts', 'T-shirts', 'Jeans', 'Leather'] },\r\n  { group: 'Tailored', classify: ['Suits', 'Blazers', 'Trousers', 'Waistcoats'] },\r\n  { group: 'Accessories', classify: ['Shoes', 'Backpacks and bags', 'Bracelets', 'Face masks'] },\r\n];\r\n\r\nconst TAGS_OPTION = [\r\n  'Toy Story 3',\r\n  'Logan',\r\n  'Full Metal Jacket',\r\n  'Dangal',\r\n  'The Sting',\r\n  '2001: A Space Odyssey',\r\n  \"Singin' in the Rain\",\r\n  'Toy Story',\r\n  'Bicycle Thieves',\r\n  'The Kid',\r\n  'Inglourious Basterds',\r\n  'Snatch',\r\n  '3 Idiots',\r\n];\r\n\r\nconst LabelStyle = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.subtitle2,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nProductNewForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentProduct: PropTypes.object,\r\n};\r\n\r\nexport default function ProductNewForm({ isEdit, currentProduct }) {\r\n  const navigate = useNavigate();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const NewProductSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    description: Yup.string().required('Description is required'),\r\n    images: Yup.array().min(1, 'Images is required'),\r\n    price: Yup.number().moreThan(0, 'Price should not be $0.00'),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      name: currentProduct?.name || '',\r\n      description: currentProduct?.description || '',\r\n      images: currentProduct?.images || [],\r\n      code: currentProduct?.code || '',\r\n      sku: currentProduct?.sku || '',\r\n      price: currentProduct?.price || 0,\r\n      priceSale: currentProduct?.priceSale || 0,\r\n      tags: currentProduct?.tags || [TAGS_OPTION[0]],\r\n      inStock: true,\r\n      taxes: true,\r\n      gender: currentProduct?.gender || GENDER_OPTION[2],\r\n      category: currentProduct?.category || CATEGORY_OPTION[0].classify[1],\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [currentProduct]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewProductSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    setValue,\r\n    getValues,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  useEffect(() => {\r\n    if (isEdit && currentProduct) {\r\n      reset(defaultValues);\r\n    }\r\n    if (!isEdit) {\r\n      reset(defaultValues);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isEdit, currentProduct]);\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\r\n      navigate(PATH_DASHBOARD.eCommerce.list);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setValue(\r\n        'images',\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  const handleRemoveAll = () => {\r\n    setValue('images', []);\r\n  };\r\n\r\n  const handleRemove = (file) => {\r\n    const filteredItems = values.images?.filter((_file) => _file !== file);\r\n    setValue('images', filteredItems);\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={8}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Stack spacing={3}>\r\n              <RHFTextField name=\"name\" label=\"Product Name\" />\r\n\r\n              <div>\r\n                <LabelStyle>Description</LabelStyle>\r\n                <RHFEditor simple name=\"description\" />\r\n              </div>\r\n\r\n              <div>\r\n                <LabelStyle>Images</LabelStyle>\r\n                <RHFUploadMultiFile\r\n                  name=\"images\"\r\n                  showPreview\r\n                  accept=\"image/*\"\r\n                  maxSize={3145728}\r\n                  onDrop={handleDrop}\r\n                  onRemove={handleRemove}\r\n                  onRemoveAll={handleRemoveAll}\r\n                />\r\n              </div>\r\n            </Stack>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Stack spacing={3}>\r\n            <Card sx={{ p: 3 }}>\r\n              <RHFSwitch name=\"inStock\" label=\"In stock\" />\r\n\r\n              <Stack spacing={3} mt={2}>\r\n                <RHFTextField name=\"code\" label=\"Product Code\" />\r\n                <RHFTextField name=\"sku\" label=\"Product SKU\" />\r\n\r\n                <div>\r\n                  <LabelStyle>Gender</LabelStyle>\r\n                  <RHFRadioGroup\r\n                    name=\"gender\"\r\n                    options={GENDER_OPTION}\r\n                    sx={{\r\n                      '& .MuiFormControlLabel-root': { mr: 4 },\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <RHFSelect name=\"category\" label=\"Category\">\r\n                  {CATEGORY_OPTION.map((category) => (\r\n                    <optgroup key={category.group} label={category.group}>\r\n                      {category.classify.map((classify) => (\r\n                        <option key={classify} value={classify}>\r\n                          {classify}\r\n                        </option>\r\n                      ))}\r\n                    </optgroup>\r\n                  ))}\r\n                </RHFSelect>\r\n\r\n                <Controller\r\n                  name=\"tags\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Autocomplete\r\n                      {...field}\r\n                      multiple\r\n                      freeSolo\r\n                      onChange={(event, newValue) => field.onChange(newValue)}\r\n                      options={TAGS_OPTION.map((option) => option)}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => <TextField label=\"Tags\" {...params} />}\r\n                    />\r\n                  )}\r\n                />\r\n              </Stack>\r\n            </Card>\r\n\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3} mb={2}>\r\n                <RHFTextField\r\n                  name=\"price\"\r\n                  label=\"Regular Price\"\r\n                  placeholder=\"0.00\"\r\n                  value={getValues('price') === 0 ? '' : getValues('price')}\r\n                  onChange={(event) => setValue('price', Number(event.target.value))}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                    type: 'number',\r\n                  }}\r\n                />\r\n\r\n                <RHFTextField\r\n                  name=\"priceSale\"\r\n                  label=\"Sale Price\"\r\n                  placeholder=\"0.00\"\r\n                  value={getValues('priceSale') === 0 ? '' : getValues('priceSale')}\r\n                  onChange={(event) => setValue('price', Number(event.target.value))}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                    type: 'number',\r\n                  }}\r\n                />\r\n              </Stack>\r\n\r\n              <RHFSwitch name=\"taxes\" label=\"Price includes taxes\" />\r\n            </Card>\r\n\r\n            <LoadingButton type=\"submit\" variant=\"contained\" size=\"large\" loading={isSubmitting}>\r\n              {!isEdit ? 'Create Product' : 'Save Changes'}\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { paramCase } from 'change-case';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\n// @mui\r\nimport { Container } from '@mui/material';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getProducts } from '../../redux/slices/product';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport ProductNewForm from '../../sections/@dashboard/e-commerce/ProductNewForm';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function EcommerceProductCreate() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  const { pathname } = useLocation();\r\n  const { name } = useParams();\r\n  const { products } = useSelector((state) => state.product);\r\n  const isEdit = pathname.includes('edit');\r\n  const currentProduct = products.find((product) => paramCase(product.name) === name);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Ecommerce: Create a new product\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading={!isEdit ? 'Create a new product' : 'Edit product'}\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            {\r\n              name: 'E-Commerce',\r\n              href: PATH_DASHBOARD.eCommerce.root,\r\n            },\r\n            { name: !isEdit ? 'New product' : name },\r\n          ]}\r\n        />\r\n\r\n        <ProductNewForm isEdit={isEdit} currentProduct={currentProduct} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}